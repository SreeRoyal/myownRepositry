/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hays.search.form.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.hays.search.form.model.SreeSoluctions;
import com.hays.search.form.model.SreeSoluctionsModel;
import com.hays.search.form.model.SreeSoluctionsSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SreeSoluctions service. Represents a row in the &quot;hays_SreeSoluctions&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link SreeSoluctionsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SreeSoluctionsImpl}.
 * </p>
 *
 * @author Sreenivasulu
 * @see SreeSoluctionsImpl
 * @see SreeSoluctions
 * @see SreeSoluctionsModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class SreeSoluctionsModelImpl extends BaseModelImpl<SreeSoluctions>
	implements SreeSoluctionsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sree soluctions model instance should use the {@link SreeSoluctions} interface instead.
	 */
	public static final String TABLE_NAME = "hays_SreeSoluctions";
	public static final Object[][] TABLE_COLUMNS = {
			{ "soluctionId", Types.BIGINT },
			{ "branchId", Types.VARCHAR },
			{ "branchAddress", Types.VARCHAR },
			{ "telephoneNumber", Types.VARCHAR },
			{ "officeEmailAddress", Types.VARCHAR },
			{ "employeeId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("soluctionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("branchId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("branchAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("telephoneNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("officeEmailAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("employeeId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table hays_SreeSoluctions (soluctionId LONG not null primary key,branchId VARCHAR(75) null,branchAddress VARCHAR(75) null,telephoneNumber VARCHAR(75) null,officeEmailAddress VARCHAR(75) null,employeeId LONG)";
	public static final String TABLE_SQL_DROP = "drop table hays_SreeSoluctions";
	public static final String ORDER_BY_JPQL = " ORDER BY sreeSoluctions.soluctionId DESC";
	public static final String ORDER_BY_SQL = " ORDER BY hays_SreeSoluctions.soluctionId DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.hays.search.form.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hays.search.form.model.SreeSoluctions"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.hays.search.form.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hays.search.form.model.SreeSoluctions"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SreeSoluctions toModel(SreeSoluctionsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SreeSoluctions model = new SreeSoluctionsImpl();

		model.setSoluctionId(soapModel.getSoluctionId());
		model.setBranchId(soapModel.getBranchId());
		model.setBranchAddress(soapModel.getBranchAddress());
		model.setTelephoneNumber(soapModel.getTelephoneNumber());
		model.setOfficeEmailAddress(soapModel.getOfficeEmailAddress());
		model.setEmployeeId(soapModel.getEmployeeId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SreeSoluctions> toModels(SreeSoluctionsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SreeSoluctions> models = new ArrayList<SreeSoluctions>(soapModels.length);

		for (SreeSoluctionsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.hays.search.form.service.util.ServiceProps.get(
				"lock.expiration.time.com.hays.search.form.model.SreeSoluctions"));

	public SreeSoluctionsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _soluctionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSoluctionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _soluctionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SreeSoluctions.class;
	}

	@Override
	public String getModelClassName() {
		return SreeSoluctions.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("soluctionId", getSoluctionId());
		attributes.put("branchId", getBranchId());
		attributes.put("branchAddress", getBranchAddress());
		attributes.put("telephoneNumber", getTelephoneNumber());
		attributes.put("officeEmailAddress", getOfficeEmailAddress());
		attributes.put("employeeId", getEmployeeId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long soluctionId = (Long)attributes.get("soluctionId");

		if (soluctionId != null) {
			setSoluctionId(soluctionId);
		}

		String branchId = (String)attributes.get("branchId");

		if (branchId != null) {
			setBranchId(branchId);
		}

		String branchAddress = (String)attributes.get("branchAddress");

		if (branchAddress != null) {
			setBranchAddress(branchAddress);
		}

		String telephoneNumber = (String)attributes.get("telephoneNumber");

		if (telephoneNumber != null) {
			setTelephoneNumber(telephoneNumber);
		}

		String officeEmailAddress = (String)attributes.get("officeEmailAddress");

		if (officeEmailAddress != null) {
			setOfficeEmailAddress(officeEmailAddress);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}
	}

	@JSON
	@Override
	public long getSoluctionId() {
		return _soluctionId;
	}

	@Override
	public void setSoluctionId(long soluctionId) {
		_soluctionId = soluctionId;
	}

	@JSON
	@Override
	public String getBranchId() {
		if (_branchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _branchId;
		}
	}

	@Override
	public void setBranchId(String branchId) {
		_branchId = branchId;
	}

	@JSON
	@Override
	public String getBranchAddress() {
		if (_branchAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _branchAddress;
		}
	}

	@Override
	public void setBranchAddress(String branchAddress) {
		_branchAddress = branchAddress;
	}

	@JSON
	@Override
	public String getTelephoneNumber() {
		if (_telephoneNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _telephoneNumber;
		}
	}

	@Override
	public void setTelephoneNumber(String telephoneNumber) {
		_telephoneNumber = telephoneNumber;
	}

	@JSON
	@Override
	public String getOfficeEmailAddress() {
		if (_officeEmailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _officeEmailAddress;
		}
	}

	@Override
	public void setOfficeEmailAddress(String officeEmailAddress) {
		_officeEmailAddress = officeEmailAddress;
	}

	@JSON
	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_employeeId = employeeId;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SreeSoluctions.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SreeSoluctions toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SreeSoluctions)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SreeSoluctionsImpl sreeSoluctionsImpl = new SreeSoluctionsImpl();

		sreeSoluctionsImpl.setSoluctionId(getSoluctionId());
		sreeSoluctionsImpl.setBranchId(getBranchId());
		sreeSoluctionsImpl.setBranchAddress(getBranchAddress());
		sreeSoluctionsImpl.setTelephoneNumber(getTelephoneNumber());
		sreeSoluctionsImpl.setOfficeEmailAddress(getOfficeEmailAddress());
		sreeSoluctionsImpl.setEmployeeId(getEmployeeId());

		sreeSoluctionsImpl.resetOriginalValues();

		return sreeSoluctionsImpl;
	}

	@Override
	public int compareTo(SreeSoluctions sreeSoluctions) {
		int value = 0;

		if (getSoluctionId() < sreeSoluctions.getSoluctionId()) {
			value = -1;
		}
		else if (getSoluctionId() > sreeSoluctions.getSoluctionId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SreeSoluctions)) {
			return false;
		}

		SreeSoluctions sreeSoluctions = (SreeSoluctions)obj;

		long primaryKey = sreeSoluctions.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<SreeSoluctions> toCacheModel() {
		SreeSoluctionsCacheModel sreeSoluctionsCacheModel = new SreeSoluctionsCacheModel();

		sreeSoluctionsCacheModel.soluctionId = getSoluctionId();

		sreeSoluctionsCacheModel.branchId = getBranchId();

		String branchId = sreeSoluctionsCacheModel.branchId;

		if ((branchId != null) && (branchId.length() == 0)) {
			sreeSoluctionsCacheModel.branchId = null;
		}

		sreeSoluctionsCacheModel.branchAddress = getBranchAddress();

		String branchAddress = sreeSoluctionsCacheModel.branchAddress;

		if ((branchAddress != null) && (branchAddress.length() == 0)) {
			sreeSoluctionsCacheModel.branchAddress = null;
		}

		sreeSoluctionsCacheModel.telephoneNumber = getTelephoneNumber();

		String telephoneNumber = sreeSoluctionsCacheModel.telephoneNumber;

		if ((telephoneNumber != null) && (telephoneNumber.length() == 0)) {
			sreeSoluctionsCacheModel.telephoneNumber = null;
		}

		sreeSoluctionsCacheModel.officeEmailAddress = getOfficeEmailAddress();

		String officeEmailAddress = sreeSoluctionsCacheModel.officeEmailAddress;

		if ((officeEmailAddress != null) && (officeEmailAddress.length() == 0)) {
			sreeSoluctionsCacheModel.officeEmailAddress = null;
		}

		sreeSoluctionsCacheModel.employeeId = getEmployeeId();

		return sreeSoluctionsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{soluctionId=");
		sb.append(getSoluctionId());
		sb.append(", branchId=");
		sb.append(getBranchId());
		sb.append(", branchAddress=");
		sb.append(getBranchAddress());
		sb.append(", telephoneNumber=");
		sb.append(getTelephoneNumber());
		sb.append(", officeEmailAddress=");
		sb.append(getOfficeEmailAddress());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.hays.search.form.model.SreeSoluctions");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>soluctionId</column-name><column-value><![CDATA[");
		sb.append(getSoluctionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>branchId</column-name><column-value><![CDATA[");
		sb.append(getBranchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>branchAddress</column-name><column-value><![CDATA[");
		sb.append(getBranchAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telephoneNumber</column-name><column-value><![CDATA[");
		sb.append(getTelephoneNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>officeEmailAddress</column-name><column-value><![CDATA[");
		sb.append(getOfficeEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = SreeSoluctions.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			SreeSoluctions.class
		};
	private long _soluctionId;
	private String _branchId;
	private String _branchAddress;
	private String _telephoneNumber;
	private String _officeEmailAddress;
	private long _employeeId;
	private SreeSoluctions _escapedModel;
}