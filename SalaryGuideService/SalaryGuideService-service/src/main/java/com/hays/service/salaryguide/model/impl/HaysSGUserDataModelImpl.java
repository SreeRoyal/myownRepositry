/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hays.service.salaryguide.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.hays.service.salaryguide.model.HaysSGUserData;
import com.hays.service.salaryguide.model.HaysSGUserDataModel;
import com.hays.service.salaryguide.model.HaysSGUserDataSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the HaysSGUserData service. Represents a row in the &quot;webcmscustom.HAYSSGUSERDATA&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link HaysSGUserDataModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HaysSGUserDataImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see HaysSGUserDataImpl
 * @see HaysSGUserData
 * @see HaysSGUserDataModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class HaysSGUserDataModelImpl extends BaseModelImpl<HaysSGUserData>
	implements HaysSGUserDataModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a hays sg user data model instance should use the {@link HaysSGUserData} interface instead.
	 */
	public static final String TABLE_NAME = "webcmscustom.HAYSSGUSERDATA";
	public static final Object[][] TABLE_COLUMNS = {
			{ "SGUSERID", Types.BIGINT },
			{ "SGUSERNAME", Types.VARCHAR },
			{ "SGJOBTITLE", Types.VARCHAR },
			{ "SGORGANIZATION", Types.VARCHAR },
			{ "SGLOCATION", Types.VARCHAR },
			{ "SGEMAILADDRESS", Types.VARCHAR },
			{ "FROMLOCALE", Types.VARCHAR },
			{ "CREATETIMESTAMP", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("SGUSERID", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("SGUSERNAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SGJOBTITLE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SGORGANIZATION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SGLOCATION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SGEMAILADDRESS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FROMLOCALE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATETIMESTAMP", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table webcmscustom.HAYSSGUSERDATA (SGUSERID LONG not null primary key,SGUSERNAME VARCHAR(75) null,SGJOBTITLE VARCHAR(75) null,SGORGANIZATION VARCHAR(75) null,SGLOCATION VARCHAR(75) null,SGEMAILADDRESS VARCHAR(75) null,FROMLOCALE VARCHAR(75) null,CREATETIMESTAMP DATE null)";
	public static final String TABLE_SQL_DROP = "drop table webcmscustom.HAYSSGUSERDATA";
	public static final String ORDER_BY_JPQL = " ORDER BY haysSGUserData.SGUSERID DESC";
	public static final String ORDER_BY_SQL = " ORDER BY webcmscustom.HAYSSGUSERDATA.SGUSERID DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.hays.service.salaryguide.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hays.service.salaryguide.model.HaysSGUserData"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.hays.service.salaryguide.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hays.service.salaryguide.model.HaysSGUserData"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.hays.service.salaryguide.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.hays.service.salaryguide.model.HaysSGUserData"),
			true);
	public static final long FROMLOCALE_COLUMN_BITMASK = 1L;
	public static final long SGUSERID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static HaysSGUserData toModel(HaysSGUserDataSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		HaysSGUserData model = new HaysSGUserDataImpl();

		model.setSGUSERID(soapModel.getSGUSERID());
		model.setSGUSERNAME(soapModel.getSGUSERNAME());
		model.setSGJOBTITLE(soapModel.getSGJOBTITLE());
		model.setSGORGANIZATION(soapModel.getSGORGANIZATION());
		model.setSGLOCATION(soapModel.getSGLOCATION());
		model.setSGEMAILADDRESS(soapModel.getSGEMAILADDRESS());
		model.setFROMLOCALE(soapModel.getFROMLOCALE());
		model.setCREATETIMESTAMP(soapModel.getCREATETIMESTAMP());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<HaysSGUserData> toModels(HaysSGUserDataSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<HaysSGUserData> models = new ArrayList<HaysSGUserData>(soapModels.length);

		for (HaysSGUserDataSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.hays.service.salaryguide.service.util.ServiceProps.get(
				"lock.expiration.time.com.hays.service.salaryguide.model.HaysSGUserData"));

	public HaysSGUserDataModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _SGUSERID;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSGUSERID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _SGUSERID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return HaysSGUserData.class;
	}

	@Override
	public String getModelClassName() {
		return HaysSGUserData.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("SGUSERID", getSGUSERID());
		attributes.put("SGUSERNAME", getSGUSERNAME());
		attributes.put("SGJOBTITLE", getSGJOBTITLE());
		attributes.put("SGORGANIZATION", getSGORGANIZATION());
		attributes.put("SGLOCATION", getSGLOCATION());
		attributes.put("SGEMAILADDRESS", getSGEMAILADDRESS());
		attributes.put("FROMLOCALE", getFROMLOCALE());
		attributes.put("CREATETIMESTAMP", getCREATETIMESTAMP());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long SGUSERID = (Long)attributes.get("SGUSERID");

		if (SGUSERID != null) {
			setSGUSERID(SGUSERID);
		}

		String SGUSERNAME = (String)attributes.get("SGUSERNAME");

		if (SGUSERNAME != null) {
			setSGUSERNAME(SGUSERNAME);
		}

		String SGJOBTITLE = (String)attributes.get("SGJOBTITLE");

		if (SGJOBTITLE != null) {
			setSGJOBTITLE(SGJOBTITLE);
		}

		String SGORGANIZATION = (String)attributes.get("SGORGANIZATION");

		if (SGORGANIZATION != null) {
			setSGORGANIZATION(SGORGANIZATION);
		}

		String SGLOCATION = (String)attributes.get("SGLOCATION");

		if (SGLOCATION != null) {
			setSGLOCATION(SGLOCATION);
		}

		String SGEMAILADDRESS = (String)attributes.get("SGEMAILADDRESS");

		if (SGEMAILADDRESS != null) {
			setSGEMAILADDRESS(SGEMAILADDRESS);
		}

		String FROMLOCALE = (String)attributes.get("FROMLOCALE");

		if (FROMLOCALE != null) {
			setFROMLOCALE(FROMLOCALE);
		}

		Date CREATETIMESTAMP = (Date)attributes.get("CREATETIMESTAMP");

		if (CREATETIMESTAMP != null) {
			setCREATETIMESTAMP(CREATETIMESTAMP);
		}
	}

	@JSON
	@Override
	public long getSGUSERID() {
		return _SGUSERID;
	}

	@Override
	public void setSGUSERID(long SGUSERID) {
		_columnBitmask = -1L;

		_SGUSERID = SGUSERID;
	}

	@JSON
	@Override
	public String getSGUSERNAME() {
		if (_SGUSERNAME == null) {
			return StringPool.BLANK;
		}
		else {
			return _SGUSERNAME;
		}
	}

	@Override
	public void setSGUSERNAME(String SGUSERNAME) {
		_SGUSERNAME = SGUSERNAME;
	}

	@JSON
	@Override
	public String getSGJOBTITLE() {
		if (_SGJOBTITLE == null) {
			return StringPool.BLANK;
		}
		else {
			return _SGJOBTITLE;
		}
	}

	@Override
	public void setSGJOBTITLE(String SGJOBTITLE) {
		_SGJOBTITLE = SGJOBTITLE;
	}

	@JSON
	@Override
	public String getSGORGANIZATION() {
		if (_SGORGANIZATION == null) {
			return StringPool.BLANK;
		}
		else {
			return _SGORGANIZATION;
		}
	}

	@Override
	public void setSGORGANIZATION(String SGORGANIZATION) {
		_SGORGANIZATION = SGORGANIZATION;
	}

	@JSON
	@Override
	public String getSGLOCATION() {
		if (_SGLOCATION == null) {
			return StringPool.BLANK;
		}
		else {
			return _SGLOCATION;
		}
	}

	@Override
	public void setSGLOCATION(String SGLOCATION) {
		_SGLOCATION = SGLOCATION;
	}

	@JSON
	@Override
	public String getSGEMAILADDRESS() {
		if (_SGEMAILADDRESS == null) {
			return StringPool.BLANK;
		}
		else {
			return _SGEMAILADDRESS;
		}
	}

	@Override
	public void setSGEMAILADDRESS(String SGEMAILADDRESS) {
		_SGEMAILADDRESS = SGEMAILADDRESS;
	}

	@JSON
	@Override
	public String getFROMLOCALE() {
		if (_FROMLOCALE == null) {
			return StringPool.BLANK;
		}
		else {
			return _FROMLOCALE;
		}
	}

	@Override
	public void setFROMLOCALE(String FROMLOCALE) {
		_columnBitmask |= FROMLOCALE_COLUMN_BITMASK;

		if (_originalFROMLOCALE == null) {
			_originalFROMLOCALE = _FROMLOCALE;
		}

		_FROMLOCALE = FROMLOCALE;
	}

	public String getOriginalFROMLOCALE() {
		return GetterUtil.getString(_originalFROMLOCALE);
	}

	@JSON
	@Override
	public Date getCREATETIMESTAMP() {
		return _CREATETIMESTAMP;
	}

	@Override
	public void setCREATETIMESTAMP(Date CREATETIMESTAMP) {
		_CREATETIMESTAMP = CREATETIMESTAMP;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			HaysSGUserData.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public HaysSGUserData toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (HaysSGUserData)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		HaysSGUserDataImpl haysSGUserDataImpl = new HaysSGUserDataImpl();

		haysSGUserDataImpl.setSGUSERID(getSGUSERID());
		haysSGUserDataImpl.setSGUSERNAME(getSGUSERNAME());
		haysSGUserDataImpl.setSGJOBTITLE(getSGJOBTITLE());
		haysSGUserDataImpl.setSGORGANIZATION(getSGORGANIZATION());
		haysSGUserDataImpl.setSGLOCATION(getSGLOCATION());
		haysSGUserDataImpl.setSGEMAILADDRESS(getSGEMAILADDRESS());
		haysSGUserDataImpl.setFROMLOCALE(getFROMLOCALE());
		haysSGUserDataImpl.setCREATETIMESTAMP(getCREATETIMESTAMP());

		haysSGUserDataImpl.resetOriginalValues();

		return haysSGUserDataImpl;
	}

	@Override
	public int compareTo(HaysSGUserData haysSGUserData) {
		int value = 0;

		if (getSGUSERID() < haysSGUserData.getSGUSERID()) {
			value = -1;
		}
		else if (getSGUSERID() > haysSGUserData.getSGUSERID()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof HaysSGUserData)) {
			return false;
		}

		HaysSGUserData haysSGUserData = (HaysSGUserData)obj;

		long primaryKey = haysSGUserData.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		HaysSGUserDataModelImpl haysSGUserDataModelImpl = this;

		haysSGUserDataModelImpl._originalFROMLOCALE = haysSGUserDataModelImpl._FROMLOCALE;

		haysSGUserDataModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<HaysSGUserData> toCacheModel() {
		HaysSGUserDataCacheModel haysSGUserDataCacheModel = new HaysSGUserDataCacheModel();

		haysSGUserDataCacheModel.SGUSERID = getSGUSERID();

		haysSGUserDataCacheModel.SGUSERNAME = getSGUSERNAME();

		String SGUSERNAME = haysSGUserDataCacheModel.SGUSERNAME;

		if ((SGUSERNAME != null) && (SGUSERNAME.length() == 0)) {
			haysSGUserDataCacheModel.SGUSERNAME = null;
		}

		haysSGUserDataCacheModel.SGJOBTITLE = getSGJOBTITLE();

		String SGJOBTITLE = haysSGUserDataCacheModel.SGJOBTITLE;

		if ((SGJOBTITLE != null) && (SGJOBTITLE.length() == 0)) {
			haysSGUserDataCacheModel.SGJOBTITLE = null;
		}

		haysSGUserDataCacheModel.SGORGANIZATION = getSGORGANIZATION();

		String SGORGANIZATION = haysSGUserDataCacheModel.SGORGANIZATION;

		if ((SGORGANIZATION != null) && (SGORGANIZATION.length() == 0)) {
			haysSGUserDataCacheModel.SGORGANIZATION = null;
		}

		haysSGUserDataCacheModel.SGLOCATION = getSGLOCATION();

		String SGLOCATION = haysSGUserDataCacheModel.SGLOCATION;

		if ((SGLOCATION != null) && (SGLOCATION.length() == 0)) {
			haysSGUserDataCacheModel.SGLOCATION = null;
		}

		haysSGUserDataCacheModel.SGEMAILADDRESS = getSGEMAILADDRESS();

		String SGEMAILADDRESS = haysSGUserDataCacheModel.SGEMAILADDRESS;

		if ((SGEMAILADDRESS != null) && (SGEMAILADDRESS.length() == 0)) {
			haysSGUserDataCacheModel.SGEMAILADDRESS = null;
		}

		haysSGUserDataCacheModel.FROMLOCALE = getFROMLOCALE();

		String FROMLOCALE = haysSGUserDataCacheModel.FROMLOCALE;

		if ((FROMLOCALE != null) && (FROMLOCALE.length() == 0)) {
			haysSGUserDataCacheModel.FROMLOCALE = null;
		}

		Date CREATETIMESTAMP = getCREATETIMESTAMP();

		if (CREATETIMESTAMP != null) {
			haysSGUserDataCacheModel.CREATETIMESTAMP = CREATETIMESTAMP.getTime();
		}
		else {
			haysSGUserDataCacheModel.CREATETIMESTAMP = Long.MIN_VALUE;
		}

		return haysSGUserDataCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{SGUSERID=");
		sb.append(getSGUSERID());
		sb.append(", SGUSERNAME=");
		sb.append(getSGUSERNAME());
		sb.append(", SGJOBTITLE=");
		sb.append(getSGJOBTITLE());
		sb.append(", SGORGANIZATION=");
		sb.append(getSGORGANIZATION());
		sb.append(", SGLOCATION=");
		sb.append(getSGLOCATION());
		sb.append(", SGEMAILADDRESS=");
		sb.append(getSGEMAILADDRESS());
		sb.append(", FROMLOCALE=");
		sb.append(getFROMLOCALE());
		sb.append(", CREATETIMESTAMP=");
		sb.append(getCREATETIMESTAMP());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.hays.service.salaryguide.model.HaysSGUserData");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>SGUSERID</column-name><column-value><![CDATA[");
		sb.append(getSGUSERID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SGUSERNAME</column-name><column-value><![CDATA[");
		sb.append(getSGUSERNAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SGJOBTITLE</column-name><column-value><![CDATA[");
		sb.append(getSGJOBTITLE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SGORGANIZATION</column-name><column-value><![CDATA[");
		sb.append(getSGORGANIZATION());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SGLOCATION</column-name><column-value><![CDATA[");
		sb.append(getSGLOCATION());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SGEMAILADDRESS</column-name><column-value><![CDATA[");
		sb.append(getSGEMAILADDRESS());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>FROMLOCALE</column-name><column-value><![CDATA[");
		sb.append(getFROMLOCALE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CREATETIMESTAMP</column-name><column-value><![CDATA[");
		sb.append(getCREATETIMESTAMP());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = HaysSGUserData.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			HaysSGUserData.class
		};
	private long _SGUSERID;
	private String _SGUSERNAME;
	private String _SGJOBTITLE;
	private String _SGORGANIZATION;
	private String _SGLOCATION;
	private String _SGEMAILADDRESS;
	private String _FROMLOCALE;
	private String _originalFROMLOCALE;
	private Date _CREATETIMESTAMP;
	private long _columnBitmask;
	private HaysSGUserData _escapedModel;
}